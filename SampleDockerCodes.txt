Docker Codes 

Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Install the latest PowerShell for new features and improvements! https://aka.ms/PSWindows

PS F:\Docker\NEW\getting-started-master> cd app
PS F:\Docker\NEW\getting-started-master\app> docker build -t getting-started .
[+] Building 203.3s (15/15) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                                 1.5s
 => => transferring dockerfile: 32B                                                                                                                                  0.1s
 => [internal] load .dockerignore                                                                                                                                    1.1s
 => => transferring context: 2B                                                                                                                                      0.0s
 => resolve image config for docker.io/docker/dockerfile:1                                                                                                          11.8s
 => [auth] docker/dockerfile:pull token for registry-1.docker.io                                                                                                     0.0s
 => CACHED docker-image://docker.io/docker/dockerfile:1@sha256:42399d4635eddd7a9b8a24be879d2f9a930d0ed040a61324cfdf59ef1357b3b2                                      0.0s
 => [internal] load build definition from Dockerfile                                                                                                                 0.0s
 => [internal] load .dockerignore                                                                                                                                    0.0s
 => [internal] load metadata for docker.io/library/node:12-alpine                                                                                                    0.0s
 => [1/5] FROM docker.io/library/node:12-alpine                                                                                                                      0.0s
 => [internal] load build context                                                                                                                                   61.8s 
 => => transferring context: 54.36MB                                                                                                                                57.3s
 => CACHED [2/5] RUN apk add --no-cache python3 g++ make                                                                                                             0.0s
 => CACHED [3/5] WORKDIR /app                                                                                                                                        0.0s 
 => [4/5] COPY . .                                                                                                                                                  12.1s
 => [5/5] RUN yarn install --production                                                                                                                             91.5s
 => exporting to image                                                                                                                                              15.5s
 => => exporting layers                                                                                                                                             13.1s 
 => => writing image sha256:060c9b1dce42a5a8a494621ff5d6de869e81c0acdff98c65a30a0ca81b9c17a4                                                                         0.2s 
 => => naming to docker.io/library/getting-started                                                                                                                   0.2s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
PS F:\Docker\NEW\getting-started-master\app> 
PS F:\Docker\NEW\getting-started-master\app> docker run -dp 3001:3000 getting-started
877ba4353ffe35fa27cb0d91a6a17d97dcadce9604b71746b6613fbce2ffc5c5
PS F:\Docker\NEW\getting-started-master\app> docker build -t getting-started .       
[+] Building 195.1s (15/15) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                                 1.7s
 => => transferring dockerfile: 32B                                                                                                                                  0.3s 
 => [internal] load .dockerignore                                                                                                                                    1.2s 
 => => transferring context: 2B                                                                                                                                      0.1s
 => resolve image config for docker.io/docker/dockerfile:1                                                                                                           9.4s
 => [auth] docker/dockerfile:pull token for registry-1.docker.io                                                                                                     0.0s
 => CACHED docker-image://docker.io/docker/dockerfile:1@sha256:42399d4635eddd7a9b8a24be879d2f9a930d0ed040a61324cfdf59ef1357b3b2                                      0.0s
 => [internal] load build definition from Dockerfile                                                                                                                 0.0s
 => [internal] load .dockerignore                                                                                                                                    0.0s 
 => [internal] load metadata for docker.io/library/node:12-alpine                                                                                                    0.0s
 => [1/5] FROM docker.io/library/node:12-alpine                                                                                                                      0.0s
 => [internal] load build context                                                                                                                                    4.2s 
 => => transferring context: 601.92kB                                                                                                                                2.7s 
 => CACHED [2/5] RUN apk add --no-cache python3 g++ make                                                                                                             0.0s
 => CACHED [3/5] WORKDIR /app                                                                                                                                        0.0s 
 => [4/5] COPY . .                                                                                                                                                  28.9s 
 => [5/5] RUN yarn install --production                                                                                                                            129.5s
 => exporting to image                                                                                                                                              11.8s
 => => exporting layers                                                                                                                                              9.3s 
 => => writing image sha256:a7ef51ec57f7e46665610e233a72109f39fabb9bd22927ec7f034f92500957d8                                                                         0.3s 
 => => naming to docker.io/library/getting-started                                                                                                                   0.3s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
PS F:\Docker\NEW\getting-started-master\app> docker run -dp 3001:3000 getting-started
7523d0184c85e36c03b29442aad9e5afb75235800d05a50b13fa66a54a5c60d2
PS F:\Docker\NEW\getting-started-master\app> 
PS F:\Docker\NEW\getting-started-master\app> docker ps
CONTAINER ID   IMAGE             COMMAND                  CREATED          STATUS          PORTS                    NAMES
7523d0184c85   getting-started   "docker-entrypoint.sâ€¦"   26 minutes ago   Up 26 minutes   0.0.0.0:3001->3000/tcp   wonderful_allen
54d24b10af34   alpine:3.5        "ping 8.8.8.8"           2 hours ago      Up 2 hours                               demo.1.wkplz05pf3t083eehad2e0o4e
PS F:\Docker\NEW\getting-started-master\app> docker stop 7523d0184c85
7523d0184c85
PS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app> docker build -t getting-started .       
[+] Building 96.4s (14/14) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                                 2.1s
 => => transferring dockerfile: 32B                                                                                                                                  0.1s 
 => [internal] load .dockerignore                                                                                                                                    3.0s
 => => transferring context: 2B                                                                                                                                      0.0s
 => resolve image config for docker.io/docker/dockerfile:1                                                                                                           3.9s
 => CACHED docker-image://docker.io/docker/dockerfile:1@sha256:42399d4635eddd7a9b8a24be879d2f9a930d0ed040a61324cfdf59ef1357b3b2                                      0.0s
 => [internal] load build definition from Dockerfile                                                                                                                 0.0s
 => [internal] load .dockerignore                                                                                                                                    0.0s 
 => [internal] load metadata for docker.io/library/node:12-alpine                                                                                                    0.0s
 => [1/5] FROM docker.io/library/node:12-alpine                                                                                                                      0.0s
 => [internal] load build context                                                                                                                                    4.4s 
 => => transferring context: 596.54kB                                                                                                                                1.8s
 => CACHED [2/5] RUN apk add --no-cache python3 g++ make                                                                                                             0.0s
 => CACHED [3/5] WORKDIR /app                                                                                                                                        0.0s 
 => CACHED [4/5] COPY . .                                                                                                                                            0.0s 
 => [5/5] RUN yarn install --production                                                                                                                             64.3s
 => exporting to image                                                                                                                                              13.5s
 => => exporting layers                                                                                                                                             10.8s
 => => writing image sha256:9e3de23f2f242355a05e5af669b28aacd91da32438bc01fbed912e9f9a01e348                                                                         0.5s 
 => => naming to docker.io/library/getting-started                                                                                                                   1.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
PS F:\Docker\NEW\getting-started-master\app> docker run -dp 3002:3000 getting-started
d22cd10919305cd1e52612e30d002a4c17d14a49b000ee2624109f6ef54caadc
PS F:\Docker\NEW\getting-started-master\app> docker ps                               
CONTAINER ID   IMAGE             COMMAND                  CREATED         STATUS         PORTS                    NAMES
d22cd1091930   getting-started   "docker-entrypoint.sâ€¦"   5 minutes ago   Up 5 minutes   0.0.0.0:3002->3000/tcp   goofy_carson
54d24b10af34   alpine:3.5        "ping 8.8.8.8"           2 hours ago     Up 2 hours   
PS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app> docker stop 54d24b10af34 
54d24b10af34
PS F:\Docker\NEW\getting-started-master\app> docker rm 54d24b10af34 
54d24b10af34
PS F:\Docker\NEW\getting-started-master\app> docker rm -f d22cd1091930 
d22cd1091930

PS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app>docker run -d ubuntu bash -c "shuf -i 1-10000 -n 1 -o /data.txt && tail -f /dev/null"
fbc4f675c7b9df1039477e791818882c14237b2157e3e0c9ecc24146ec41d8b5
PS F:\Docker\NEW\getting-started-master\app> docker ps
CONTAINER ID   IMAGE        COMMAND                  CREATED              STATUS              PORTS     NAMES
fbc4f675c7b9   ubuntu       "bash -c 'shuf -i 1-â€¦"   20 seconds ago       Up 12 seconds                 fervent_varahamihira
9c7f6b39e3eb   alpine:3.5   "ping 8.8.8.8"           About a minute ago   Up About a minute             demo.1.4aw9xoq946c7wcjc1398fqj1q
PS F:\Docker\NEW\getting-started-master\app>  docker exec fbc4f675c7b9 cat /data.txt
3249
PS F:\Docker\NEW\getting-started-master\app> docker run -it ubuntu ls 
bin   dev  home  lib32  libx32  mnt  proc  run   srv  tmp  var
boot  etc  lib   lib64  media   opt  root  sbin  sys  usr
PS F:\Docker\NEW\getting-started-master\app>  docker exec fbc4f675c7b9 ls           
bin
boot
data.txt
dev
etc
home
lib
lib32
lib64
libx32
media
mnt
opt
proc
root
run
sbin
srv
sys
tmp
usr
var
PS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app> docker volume create todo-db
todo-db
PS F:\Docker\NEW\getting-started-master\app>docker run -dp 3000:3000 -v todo-db:/etc/todos getting-started
27e525910e7660e571a56dc0c03d77f9b505aa11478da23155679c487db81210
PS F:\Docker\NEW\getting-started-master\app> docker volume inspect todo-db
[
    {
        "CreatedAt": "2022-01-08T09:24:34Z",
        "Driver": "local",
        "Labels": {},
        "Mountpoint": "/var/lib/docker/volumes/todo-db/_data",
        "Name": "todo-db",
        "Options": {},
        "Scope": "local"
    }
]
PS F:\Docker\NEW\getting-started-master\app> docker run -dp 3003:3000 -w /app -v "$(pwd):/app" node:12-alpine sh -c "yarn install && yarn run dev"
bc540cabd76c09570be462b1b8b4bf311f4c1e133bac4cf9ee372a3c5717fcf9
PS F:\Docker\NEW\getting-started-master\app> docker ps
CONTAINER ID   IMAGE            COMMAND                  CREATED          STATUS              PORTS                    NAMES
bc540cabd76c   node:12-alpine   "docker-entrypoint.sâ€¦"   2 minutes ago    Up About a minute   0.0.0.0:3003->3000/tcp   gracious_gould
9c7f6b39e3eb   alpine:3.5       "ping 8.8.8.8"           19 minutes ago   Up 19 minutes                                demo.1.4aw9xoq946c7wcjc1398fqj1q
PS F:\Docker\NEW\getting-started-master\app> docker logs -f bc540cabd76c
yarn install v1.22.17
[1/4] Resolving packages...
warning Resolution field "ansi-regex@5.0.1" is incompatible with requested version "ansi-regex@^2.0.0"
warning Resolution field "ansi-regex@5.0.1" is incompatible with requested version "ansi-regex@^3.0.0"
success Already up-to-date.
Done in 1.46s.
yarn run v1.22.17
$ nodemon src/index.js
[nodemon] 2.0.13
[nodemon] to restart at any time, enter `rs`
[nodemon] watching path(s): *.*
[nodemon] watching extensions: js,mjs,json
[nodemon] starting `node src/index.js`
Using sqlite database at /etc/todos/todo.db
Listening on port 3000
PS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app> docker build -t getting-started . 
[+] Building 168.0s (15/15) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                                 2.7s
 => => transferring dockerfile: 32B                                                                                                                                  0.0s 
 => [internal] load .dockerignore                                                                                                                                    2.2s 
 => => transferring context: 2B                                                                                                                                      0.0s
 => resolve image config for docker.io/docker/dockerfile:1                                                                                                           6.4s
 => [auth] docker/dockerfile:pull token for registry-1.docker.io                                                                                                     0.0s
 => CACHED docker-image://docker.io/docker/dockerfile:1@sha256:42399d4635eddd7a9b8a24be879d2f9a930d0ed040a61324cfdf59ef1357b3b2                                      0.0s
 => [internal] load .dockerignore                                                                                                                                    0.0s
 => [internal] load build definition from Dockerfile                                                                                                                 0.0s 
 => [internal] load metadata for docker.io/library/node:12-alpine                                                                                                    0.0s
 => [1/5] FROM docker.io/library/node:12-alpine                                                                                                                      0.0s
 => [internal] load build context                                                                                                                                    3.6s 
 => => transferring context: 601.95kB                                                                                                                                1.6s
 => CACHED [2/5] RUN apk add --no-cache python3 g++ make                                                                                                             0.0s
 => CACHED [3/5] WORKDIR /app                                                                                                                                        0.0s 
 => [4/5] COPY . .                                                                                                                                                  28.9s 
 => [5/5] RUN yarn install --production                                                                                                                            104.5s
 => exporting to image                                                                                                                                              16.3s
 => => exporting layers                                                                                                                                             11.4s 
 => => writing image sha256:eb8f4a0a11d954077ac42d3033a89d6321dee746b81683f05c0c4748caac1ef4                                                                         1.3s 
 => => naming to docker.io/library/getting-started                                                                                                                   0.5s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
PS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app> docker run -dp 3004:3000 -w /app -v "$(pwd):/app" node:12-alpine sh -c "yarn install && yarn run dev"
e32e436ae8e00d624105f2b0f927bf61b2df9ad359722d4a68ccb0966bd73072
PS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app> docker network create todo-app4
26bafd5002f5dd482a5a7b75dc5757306fb8c2d1392dacd2fd41010ac33bf82c
PS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app> docker run -d `
>>      --network todo-app4 --network-alias mysql `
>>      -v todo-mysql-data:/var/lib/mysql `
>>      -e MYSQL_ROOT_PASSWORD=secret `
>>      -e MYSQL_DATABASE=todos4 `
>>      mysql:5.7
d1db23a9d7c1e3c431d1f86096c32d342609b7bd66fecf440410799082ea1bdbPS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app> docker ps
CONTAINER ID   IMAGE            COMMAND                  CREATED              STATUS              PORTS                    NAMES
d1db23a9d7c1   mysql:5.7        "docker-entrypoint.sâ€¦"   About a minute ago   Up About a minute   3306/tcp, 33060/tcp      zen_bose
d570f11f04b6   node:12-alpine   "docker-entrypoint.sâ€¦"   11 minutes ago       Up 11 minutes       0.0.0.0:3003->3000/tcp   focused_solomon
9c7f6b39e3eb   alpine:3.5       "ping 8.8.8.8"           39 minutes ago       Up 39 minutes  
PS F:\Docker\NEW\getting-started-master\app>docker exec -it d1db23a9d7c1 mysql -u root -p  
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 8
Server version: 5.7.36 MySQL Community Server (GPL)

Copyright (c) 2000, 2021, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
| todos4             |
+--------------------+
5 rows in set (0.00 sec)

mysql> use todos4
Database changed
mysql> show tables
    -> ;
Empty set (0.00 sec)

mysql> exit
Bye
PS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app> docker run -dp 3000:3000 `
>>    -w /app -v "$(pwd):/app" `
>>    --network todo-app4 `
>>    -e MYSQL_HOST=mysql `
>>    -e MYSQL_USER=root `
>>    -e MYSQL_PASSWORD=secret `
>>    -e MYSQL_DB=todos4 `
>>    node:12-alpine `
>>    sh -c "yarn install && yarn run dev"
f319ae8c0b874735cd6c1a281f3ac20123ffb7fecde30b6896f814620a46ea49
PS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app>  docker ps  
CONTAINER ID   IMAGE            COMMAND                  CREATED             STATUS             PORTS                    NAMES
f319ae8c0b87   node:12-alpine   "docker-entrypoint.sâ€¦"   2 minutes ago       Up 2 minutes       0.0.0.0:3000->3000/tcp   brave_banzai
d1db23a9d7c1   mysql:5.7        "docker-entrypoint.sâ€¦"   25 minutes ago      Up 24 minutes      3306/tcp, 33060/tcp      zen_bose
d570f11f04b6   node:12-alpine   "docker-entrypoint.sâ€¦"   35 minutes ago      Up 35 minutes      0.0.0.0:3003->3000/tcp   focused_solomon
9c7f6b39e3eb   alpine:3.5       "ping 8.8.8.8"           About an hour ago   Up About an hour                            demo.1.4aw9xoq946c7wcjc1398fqj1q
PS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app> docker logs f319ae8c0b87
yarn install v1.22.17
[1/4] Resolving packages...
warning Resolution field "ansi-regex@5.0.1" is incompatible with requested version "ansi-regex@^2.0.0"
warning Resolution field "ansi-regex@5.0.1" is incompatible with requested version "ansi-regex@^3.0.0"
success Already up-to-date.
Done in 1.32s.
yarn run v1.22.17
$ nodemon src/index.js
[nodemon] 2.0.13
[nodemon] to restart at any time, enter `rs`
[nodemon] watching path(s): *.*
[nodemon] watching extensions: js,mjs,json
[nodemon] starting `node src/index.js`
Waiting for mysql:3306.
Connected!
Connected to mysql db at host mysql
Listening on port 3000
PS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app> docker run -d `
>>   --network todo-app --network-alias mysql `
>>   -v todo-mysql-data:/var/lib/mysql `
>>   -e MYSQL_ROOT_PASSWORD=secret `
>>   -e MYSQL_DATABASE=todos `
>>   mysql:5.7
e2ef6b8a1204cd476f85157adc6e3ccc6980d66b143dfed0d410eb745699e13e
PS F:\Docker\NEW\getting-started-master\app> docker-compose up -d
WARNING: The Docker Engine you're using is running in swarm mode.

Compose does not use swarm mode to deploy services to multiple nodes in a swarm. All containers will be scheduled on the current node.

To deploy your application across the swarm, use `docker stack deploy`.

Creating network "app_default" with the default driver
Creating volume "app_todo-mysql-data" with default driver
Creating app_mysql_1 ... done
Creating app_app_1   ... done
PS F:\Docker\NEW\getting-started-master\app>
PS F:\Docker\NEW\getting-started-master\app>
